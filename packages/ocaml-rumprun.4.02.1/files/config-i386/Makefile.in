# Derived from config-amd64/Makefile and edited to cross-build 32-bit compiler
# based on opam 4.02.01+32bit.
# N.B: System must be set to bsd_elf, this is not the same as for amd64.
PREFIX=@OPAM_PREFIX@/@RUMPRUN_PLATFORM@
BINDIR=$(PREFIX)/bin
LIBDIR=$(PREFIX)/lib/ocaml
STUBLIBDIR=$(LIBDIR)/stublibs
MANDIR=$(PREFIX)/man
MANEXT=1
CAMLRUN=ocamlrun
CAMLYACC=ocamlyacc
RANLIB=ranlib
RANLIBCMD=ranlib
ARCMD=ar
SHARPBANGSCRIPTS=true
UNIX_OR_WIN32=unix
UNIXLIB=unix
GRAPHLIB=graph
BNG_ARCH=ia32
BNG_ASM_LEVEL=2
PTHREAD_LINK=-lpthread
PTHREAD_CAML_LINK=-cclib -lpthread
X11_INCLUDES=not found
X11_LINK=not found
LIBBFD_LINK=
BYTECC=@RUMPRUN_CC@
BYTECCCOMPOPTS=-fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
BYTECCLINKOPTS=
BYTECCLIBS= -lm   -lpthread
BYTECCRPATH=
EXE=
SUPPORTS_SHARED_LIBRARIES=false
SHAREDCCCOMPOPTS=
MKSHAREDLIBRPATH=
NATDYNLINKOPTS=
SYSLIB=-l$(1)
#ml let syslib x = "-l"^x;;

### How to build a static library
MKLIB=ar rc $(1) $(2); ranlib $(1)
#ml let mklib out files opts = Printf.sprintf "ar rc %s %s %s; ranlib %s" out opts files out;;
ARCH=i386
MODEL=default
SYSTEM=bsd_elf
NATIVECC=@RUMPRUN_CC@
NATIVECCCOMPOPTS=-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
NATIVECCPROFOPTS=-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
NATIVECCLINKOPTS=
NATIVECCRPATH=
NATIVECCLIBS= -lm 
ASM=as --32
ASPP=@RUMPRUN_CC@ -c
ASPPPROFFLAGS=-DPROFILING
PROFILING=noprof
DYNLINKOPTS=
OTHERLIBRARIES=unix str num bigarray systhreads
CC_PROFILE=-pg
SYSTHREAD_SUPPORT=true
PARTIALLD=ld -r -melf_i386
PACKLD=$(PARTIALLD) $(NATIVECCLINKOPTS) -o\ 
DLLCCCOMPOPTS=
IFLEXDIR=
O=o
A=a
SO=so
EXT_OBJ=.o
EXT_ASM=.s
EXT_LIB=.a
EXT_DLL=.so
EXTRALIBS=
CCOMPTYPE=cc
TOOLCHAIN=cc
NATDYNLINK=false
CMXS=cmxa
MKEXE=$(BYTECC)
MKEXEDEBUGFLAG=-g
MKDLL=
MKMAINDLL=
RUNTIMED=noruntimed
WITH_DEBUGGER=
WITH_OCAMLDOC=
WITH_OCAMLBUILD=
ASM_CFI_SUPPORTED=true
WITH_FRAME_POINTERS=false
TARGET=@RUMPRUN_PLATFORM@
